def apiProperties = rootProject.file('secure/api.properties')

ext {
    config = [
            baseUrl       : "http://api.themoviedb.org/3/",
            apiKey        : getProperty('apiKey', apiProperties),
            poeditorApiKey: getProperty('poeditorApiKey', apiProperties)
    ]
}

buildscript {

    ext {
        pluginsVersions = [
                gradle        : '3.4.2',
                poeditor      : '0.3.3',
                gradleVersions: '0.17.0',
                ktlint        : '8.1.0'
        ]

        versions = [
                kotlin  : '1.3.41',
                rxjava  : '2.2.10',
                rxKotlin: '2.3.0',
                gson    : '2.8.5'
        ]

        androidVersions = [
                multidex          : '2.0.1',
                koin              : '1.0.2',
                timber            : '4.7.1',
                rxAndroid         : '2.1.1',
                androidx          : '1.0.+',
                androidxLifecycle : '2.0.+',
                constraint        : '1.1.3',
                retrofit          : '2.4.0',
                loggingInterceptor: '3.10.0',
                glide             : '4.7.1',
                rxbinding         : '2.1.1',
                navigation        : '2.1.0-alpha06'
        ]

        testVersions = [
                junit        : '4.12',
                mockitoKotlin: '2.1.0',
                kluent       : '1.52'
        ]
    }

    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$project.pluginsVersions.gradle"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$project.versions.kotlin"

        classpath "be.lukin.poeditor:gradle:$project.pluginsVersions.poeditor"
        classpath "com.github.ben-manes:gradle-versions-plugin:$project.pluginsVersions.gradleVersions"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$project.pluginsVersions.ktlint"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

static def getProperty(String prop, File propsFile) {
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[prop]
    } else {
        return System.getenv(prop)
    }
}